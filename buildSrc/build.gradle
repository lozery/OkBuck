import java.text.SimpleDateFormat

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 Piasy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'maven-publish'
apply plugin: "com.jfrog.bintray"
apply plugin: 'maven'
apply plugin: 'groovy'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1"
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

compileGroovy {
    targetCompatibility = 1.7
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'commons-io:commons-io:2.4'
    compile 'com.android.tools.build:gradle:1.3.0'
}

def siteUrl = 'https://github.com/Piasy/OkBuck'
def gitUrl = 'https://github.com/Piasy/OkBuck.git'
def publishGroup = 'com.github.piasy'
def publishVersion = '0.2.7'

group = publishGroup
version = publishVersion

Properties properties = new Properties()
// for wrapper project structure
File propertyFile = project.rootProject.file('bintray.properties')
properties.load(propertyFile.newDataInputStream())

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            artifactId 'okbuck-gradle-plugin'
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['mavenJava'] //When uploading Maven-based publication files
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
    pkg {
        repo = 'maven'
        name = 'OkBuck'
        desc = 'Twelve line config to migrate from Android Studio + gradle to facebook BUCK.'
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl + '/issues'
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels =  ['buck', 'okbuck']
        publicDownloadNumbers = true
        //Optional version descriptor
        version {
            name = publishVersion //Bintray logical version name
            released  = new SimpleDateFormat('yyyy-MM-dd\'T\'HH:mm:ss.SSSZZ').format(new Date()) //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = publishVersion
        }
    }
}
